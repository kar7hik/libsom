import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import Normalize

# Import mnist dataset
from sklearn.datasets import fetch_openml


mnist = fetch_openml('mnist_784')
images = mnist.data
targets = mnist.target


# Input parameters: ###########################################################
map_growing_coefficient = 0.1
hierarchical_growing_coefficient = 0.0001
initial_learning_rate = 0.15
initial_neighbor_radius = 1.5
growing_metric = "qe"
epochs = 15
dataset_percentage = 0.5
min_dataset_size = 30
max_iter = 10
num_cycle = 5
num_repeat = 2
alpha = 0.7





# def show_some_digits(images, targets, sample_size=24, title_text='Digit {}' ):
#     '''
#     Visualize random digits in a grid plot
#     images - array of flatten gidigs [:,784]
#     targets - final labels
#     '''
#     nsamples = sample_size
#     rand_idx = np.random.choice(images.shape[0], nsamples)
#     images_and_labels = list(zip(images[rand_idx], targets[rand_idx]))

#     img = plt.figure(1, figsize=(15, 12), dpi=160)
#     for index, (image, label) in enumerate(images_and_labels):
#         plt.subplot(np.ceil(nsamples/6.0), 6, index + 1)
#         plt.axis('off')
#        each image is flat, we have to reshape to 2D array 28x28-784
#         plt.imshow(image.reshape(28,28),
#                    cmap=plt.cm.gray_r,
#                    interpolation='nearest')
#         plt.title(title_text.format(label))
#     plt.show()


# show_some_digits(images, targets)
